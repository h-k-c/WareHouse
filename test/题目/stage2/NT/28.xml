<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(at 0 4)
(sort 1 refrigerator) (size 1 big) (at 1 1) (type 1 container) (opened 1)
(sort 2 microwave) (size 2 big) (at 2 2) (type 2 container) (closed 2)
(sort 3 plant) (size 3 big) (at 3 3)
(sort 4 table) (size 4 big) (at 4 4)
(sort 5 workspace) (size 5 big) (at 5 5)
(sort 6 closet) (size 6 big) (at 6 6) (type 6 container) (opened 6)
(sort 7 book) (size 7 small) (color 7 black) (at 7 4)
(sort 8 cup) (size 8 small) (inside 8 6)
(sort 9 can) (size 9 small) (hold 9)
(sort 10 remotecontrol) (size 10 small) (inside 10 2)
(sort 11 cup) (size 11 small) (color 11 yellow)
(sort 12 can) (size 12 small) (color 12 black)
(sort 13 bottle) (size 13 small) (color 13 green) (at 13 5)
(sort 14 book) (size 14 small) (color 14 green) (inside 14 2)
(sort 15 can) (size 15 small) (color 15 green) (at 15 3)
(sort 16 book) (size 16 small) (color 16 blue) (plate 16)
(sort 17 book) (size 17 small) (color 17 black) (at 17 5)
</info>
<mis>
</mis>
<err>
<r>
(inside 11 1)
(inside 12 2)
</r>
<w>
(inside 11 3)
(inside 12 5)
</w>
</err>
</env>
<instr>(:ins 
(:info (closed X) (:cond (sort X microwave)))
(:info (plate X) (:cond (sort X book) (color X black)))
(:cons_notnot (:info (opened X) (:cond (type X container) (sort X closet))))
(:task (puton X Y) (:cond (color X black) (sort X book) (sort Y table)))
(:task (close X) (:cond (sort X refrigerator) (type X container)))
(:task (pickup X) (:cond (sort X can) (color X green)))
(:task (putin X Y) (:cond (sort X cup) (sort Y refrigerator)))
(:task (puton X Y) (:cond (color X green) (sort X bottle) (sort Y table)))
)
</instr>
<nl>
The microwave is closed.
The black book is on the plate.
The closet must be opened.
Put the black book on the table.
Close the refrigerator.
Pick up the green can.
Put a cup in the refrigerator.
Put the green bottle on the table.
</nl>
</test>
