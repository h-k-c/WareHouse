<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(hold 0) (at 0 5)
(sort 1 cupboard) (size 1 big) (at 1 1) (type 1 container) (opened 1)
(sort 2 cupboard) (size 2 big) (at 2 2) (type 2 container) (closed 2)
(sort 3 worktable) (size 3 big) (at 3 3)
(sort 4 bed) (size 4 big) (at 4 4)
(sort 5 bed) (size 5 big) (at 5 5)
(sort 6 book) (size 6 small) (color 6 green)
(sort 7 can) (size 7 small) (color 7 yellow) (plate 7)
(sort 8 remotecontrol) (size 8 small)
(sort 9 remotecontrol) (size 9 small) (color 9 yellow) (inside 9 1)
(sort 10 can) (size 10 small)
(sort 11 bottle) (size 11 small) (color 11 red) (at 11 3)
(sort 12 bottle) (size 12 small) (color 12 yellow) 
(sort 13 can) (size 13 small) (color 13 black)
(sort 14 cup) (size 14 small) (at 14 4)
(sort 15 cup) (size 15 small) (color 15 black) (inside 15 2)
(sort 16 can) (size 16 small) (color 16 green)
(sort 17 can) (size 17 small) (color 17 white) (at 17 5)
(sort 18 bottle) (size 18 small) (color 18 blue) (at 18 3)
(sort 19 cup) (size 19 small)
(sort 20 book) (size 20 small) (color 20 green) (inside 20 1)
</info>
<mis>
(inside 13 1)
(inside 19 1)
</mis>
<err>
<r>
(inside 6 1)
(at 8 3)
(at 10 4)
(inside 16 2)
</r>
<w>
(inside 6 5)
(at 8 5)
(at 10 5)
(inside 16 1)
</w>
</err>
</env>
<instr>(:ins 
(:task (putin X Y) (:cond (sort X can) (type Y container)))
(:task (open X) (:cond (type X container) (sort X cupboard)))
(:info (at X Y) (:cond (sort X cup) (type Y container) (sort Y cupboard)))
(:info (at X Y) (:cond (sort X remotecontrol) (sort Y worktable)))
(:cons_not (:info (at X Y) (:cond (sort X can) (color X green) (sort Y worktable))))
)
</instr>
<nl>
Put the can in the cupboard.
Open the door of the cupboard.
There is a cup in the cupboard.
there is a remotecontrol on the worktable.
Do put the can which is green on the worktable.
</nl>
</test>
