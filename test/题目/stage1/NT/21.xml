<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="off" ans="off">
<info>
(at 0 5) (plate 11)  (hold 14)
(sort 1 television) (size 1 big) (at 1 1)
(sort 2 desk) (size 2 big) (at 2 2)
(sort 3 worktable) (size 3 big) (at 3 3)
(sort 4 chair) (size 4 big) (at 4 4)
(sort 5 closet) (size 5 big) (at 5 5) (type 5 container) (opened 5)
(sort 6 couch) (size 6 big) (at 6 6)
(sort 7 cupboard) (size 7 big) (at 7 7) (type 7 container) (opened 7)
(sort 8 sofa) (size 8 big) (at 8 8)
(sort 9 table) (size 9 big) (at 9 9)
(sort 10 can) (size 10 small) (color 10 red) (at 10 9)
(sort 11 can) (size 11 small) (color 11 white) 
(sort 12 can) (size 12 small) (color 12 black) 
(sort 13 book) (size 13 small) (color 13 black)
(sort 14 book) (size 14 small) (color 14 blue) 
(sort 15 cup) (size 15 small) (color 15 blue)
(sort 16 cup) (size 16 small) (color 16 white) (at 16 16)
(sort 17 remotecontrol) (size 17 small) (color 17 yellow) (at 17 17)
(sort 18 remotecontrol) (size 18 small) (color 18 yellow)
(sort 19 bottle) (size 19 small) (color 21 yellow) (at 19 2)
(sort 20 bottle) (size 20 small) (at 20 20) 
</info>
<mis>
(inside 15 7) (at 12 6)
</mis>
<err>
<r>
(at 13 6) (at 18 1)
</r>
<w>
(at 13 4) (at 18 4)
</w>
</err>
</env>
<instr>
(:ins 
(:cons_notnot (:info (on X Y) (:cond (sort X bottle) (color X yellow) (sort Y desk))))
(:task (putin X Y) (:cond (sort X book) (color X blue) (sort Y closet) (type Y container)))
(:task (takeout X Y) (:cond (sort X cup) (sort Y closet)))
(:task (goto X) (:cond (sort X television)))
(:task (putdown X) (:cond (sort X bottle)))
)
</instr>
<nl>
The bottle which is yellow must be on the desk.
Put the blue book in the closet.
Take out the cup from the closet.
Go to the television.
Put down the bottle.
</nl>
</test>
