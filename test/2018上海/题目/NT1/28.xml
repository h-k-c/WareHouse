<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="off" ans="off">
    <info>
    (hold 0) (plate 15) (at 0 5)
    (sort 1 workspace) (size 1 big) (at 1 1)
    (sort 2 cupboard) (size 2 big) (at 2 2) (type 2 container) (closed 2)
    (sort 3 microwave) (size 3 big) (at 3 3) (type 3 container) (opened 3)
    (sort 4 plant) (size 4 big) (at 4 4)
    (sort 5 bed) (size 5 big) (at 5 5)
    (sort 6 human) (size 6 big) (at 6 6)
    (sort 7 desk) (size 7 big) (at 7 7)
    (sort 8 remotecontrol) (size 8 small) (color 8 white) 
    (sort 9 remotecontrol) (size 9 small) (color 9 yellow) 
    (sort 10 remotecontrol) (size 10 small) (color 10 blue) 
    (sort 11 remotecontrol) (size 11 small) (color 11 red) 
    (sort 12 book) (size 12 small) (color 12 white) 
    (sort 13 book) (size 13 small) (color 13 black) 
    (sort 14 bottle) (size 14 small) (color 14 white) 
    (sort 15 bottle) (size 15 small) (color 15 green)
    </info>
    <mis>
    (at 12 1) (inside 13 2) (at 14 5)
    </mis>
    <err>
        <r>(inside 8 2) (at 9 4) (inside 10 3) (at 11 7)</r>
        <w>(at 8 1) (at 9 4) (at 10 6) (inside 11 2)</w>
    </err>
    <extra>
    </extra>
</env>
<instr>
(:ins
    (:task (puton X Y) (:cond (sort X remotecontrol) (color X yellow) (sort Y bed)))
    (:task (give human X) (:cond (sort X bottle) (color X white)))
    (:task (puton X Y) (:cond (sort X bottle) (color X green) (sort Y workspace)))
    (:task (putin X Y) (:cond (sort X book) (color X white) (sort Y cupboard)))
    (:task (putin X Y) (:cond (sort X remotecontrol) (color X white) (sort Y microwave)))
    (:task (puton X Y) (:cond (sort X remotecontrol) (color X blue) (sort Y plant)))
)
</instr>
<nl>
Put yellow remotecontrol on bed.
Give human the bottle which is white.
Put bottle which is green on workspace.
Put a white book in the cupboard.
Put the white remotecontrol in the microwave.
Put the remotecontrol which is blue on the plant.
</nl>
</test>
