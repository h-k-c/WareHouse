<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
    <info>
    (hold 20) (plate 14) (at 0 3)
    (sort 1 closet) (size 1 big) (at 1 1) (type 1 container) (closed 1)
    (sort 2 television) (size 2 big) (at 2 2)
    (sort 3 sofa) (size 3 big) (at 3 3)
    (sort 4 washmachine) (size 4 big) (at 4 4) (type 4 container)
    (sort 5 worktable) (size 5 big) (at 5 5)
    (sort 6 workspace) (size 6 big) (at 6 6)
    (sort 7 cupboard) (size 7 big) (at 7 7) (type 7 container)
    (sort 8 bed) (size 8 big) (at 8 8)
    (sort 9 refrigerator) (size 9 big) (at 9 9) (type 9 container) (closed 9)
    (sort 10 desk) (size 10 big) (at 10 10)
    (sort 11 couch) (size 11 big) (at 11 11)
    (sort 12 table) (size 12 big) (at 12 12)
    (sort 13 plant) (size 13 big) (at 13 13)
    (sort 14 remotecontrol) (size 14 small) (color 14 red)
    (sort 15 remotecontrol) (size 15 small) (color 15 black) (inside 15 4) 
    (sort 16 can) (size 16 small) (color 16 white)
    (sort 17 can) (size 17 small) (color 17 yellow) (inside 17 4)
    (sort 18 can) (size 18 small) (color 18 blue) (at 18 3)
    (sort 19 bottle) (size 19 small) (color 19 yellow) (at 19 2) 
    (sort 20 bottle) (size 20 small) (color 20 blue)
    (sort 21 book) (size 21 small) (color 21 red) (at 21 3)
    (sort 22 book) (size 22 small) (color 22 white)
    (sort 23 book) (size 23 small) (color 23 black) (at 23 1)
    </info>
    <mis>
    (inside 16 4)
    </mis>
    <err>
        <r>(at 22 2)</r>
        <w>(at 22 11)</w>
    </err>   
    <extra>
    (opened 4) (opened 7)
    </extra>
</env>
<instr>
(:ins
    (:info (opened X) (:cond (sort X washmachine)))
    (:info (opened X) (:cond (sort X cupboard)))
    (:task (putin X Y) (:cond (sort X book) (color X white) (sort Y cupboard)))
    (:task (puton X Y) (:cond (sort X bottle) (color X yellow) (sort Y washmachine)))
    (:task (putin X Y) (:cond (sort X remotecontrol) (color X black) (sort Y refrigerator)))
    (:task (close X) (:cond (sort X washmachine)))
    (:task (puton X Y) (:cond (sort X can) (sort Y cupboard)))
    (:task (pickup X) (:cond (sort X can) (color X blue)))
    (:cons_not (:task (takeout X Y) (:cond (sort X can) (color X yellow) (sort Y washmachine))))
)
</instr>
<nl>
The door of the washmachine is opened.
The door of the cupboard is opened.
Put a book which is white in the cupboard.
Put a bottle which is yellow on the washmachine.
Put the black remotecontrol in the refrigerator.
Close the washmachine.
Put a can on the cupboard.
Pick up the blue can.
Do not take out the yellow can from the washmachine.
</nl>
</test>
