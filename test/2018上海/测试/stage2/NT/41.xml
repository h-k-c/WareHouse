<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(at 0 2)
(sort 1 couch) (size 1 big) (at 1 1)
(sort 2 table) (size 2 big) (at 2 2)
(sort 3 refrigerator) (size 3 big) (at 3 3) (type 3 container) (opened 3)
(sort 4 book) (size 4 small) (color 4 green) (inside 4 3)
(sort 5 cup) (size 5 small) (inside 5 3)
(sort 6 remotecontrol) (size 6 small) (color 6 black) (plate 6)
(sort 7 can) (size 7 small) (color 7 green)
(sort 8 can) (size 8 small) (color 8 green) (inside 8 3)
(sort 9 bottle) (size 9 small) (at 9 1)
(sort 10 can) (size 10 small) (color 10 white) (hold 10)
(sort 11 book) (size 11 small) (inside 11 3)
(sort 12 bottle) (size 12 small) (color 12 blue) (at 12 1)
(sort 13 cup) (size 13 small) (at 13 2)
(sort 14 cup) (size 14 small) (at 14 2)
(sort 15 can) (size 15 small) (color 15 green)
(sort 16 bottle) (size 16 small) (at 16 2)
(sort 17 remotecontrol) (size 17 small) (color 17 white) (at 17 1)
(sort 18 cup) (size 18 small) (color 18 white) (inside 18 3)
(sort 19 bottle) (size 19 small) (at 19 2)
</info>
<mis>
(at 7 2)
(inside 15 3)
</mis>
<err>
<r>
</r>
<w>
</w>
</err>
</env>
<instr>(:ins 
(:task (puton X Y) (:cond (sort X can) (color X white) (sort Y couch)))
(:task (goto X) (:cond (sort X couch)))
(:info (closed X) (:cond (type X container)))
(:info (at X Y) (:cond (sort X bottle) (sort Y table)))
(:info (at X Y) (:cond (sort X book) (sort Y table)))
(:info (opened X) (:cond (type X container)))
(:cons_notnot (:info (at X Y) (:cond (sort X cup) (sort Y couch))))
(:cons_notnot (:info (at X Y) (:cond (sort X bottle) (sort Y couch))))
(:cons_not (:task (takeout X Y) (:cond (sort X book) (type Y container))))
)
</instr>
<nl>
Put the can which is white on the couch.
Go to couch.
There door of the container is closed.
There is a  bottle on the table.
There door of the container is opened.
There must be a cup on the couch.
There must be a bottle on the couch.
Do not take out the book from the container. 
</nl>
</test>
