<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(at 0 1)
(sort 1 cupboard) (size 1 big) (at 1 1) (type 1 container) (opened 1)
(sort 2 refrigerator) (size 2 big) (at 2 2) (type 2 container) (opened 2)
(sort 3 worktable) (size 3 big) (at 3 3)
(sort 4 worktable) (size 4 big) (at 4 4)
(sort 5 cup) (size 5 small) (color 5 black) (hold 5)
(sort 6 remotecontrol) (size 6 small) (plate 6)
(sort 7 book) (size 7 small) (color 7 black)
(sort 8 remotecontrol) (size 8 small) (color 8 red)
(sort 9 book) (size 9 small) (color 9 yellow)
(sort 10 bottle) (size 10 small) (color 10 black)
(sort 11 book) (size 11 small) (color 11 red)
(sort 12 bottle) (size 12 small)
(sort 13 can) (size 13 small) (color 13 white)
(sort 14 bottle) (size 14 small) (color 14 yellow)
(sort 15 can) (size 15 small) (color 15 white) (inside 15 2)
(sort 16 can) (size 16 small) (color 16 blue)
(sort 17 remotecontrol) (size 17 small) (color 17 green) (at 17 4)
</info>
<mis>
(at 7 3)
(inside 8 1)
(at 13 3)
(at 14 3)
</mis>
<err>
<r>
(inside 9 2)
(inside 10 1)
(at 11 4)
(at 12 3)
(at 16 3)
</r>
<w>
(inside 9 4)
(inside 10 3)
(at 11 2)
(at 12 1)
(at 16 1)
</w>
</err>
</env>
<instr>(:ins 
(:task (goto X) (:cond (sort X worktable)))
(:task (puton X Y) (:cond (sort X book) (type Y container)))
(:task (open X) (:cond (sort X cupboard)))
(:info (at X Y) (:cond (color X black) (sort X cup) (sort Y worktable)))
(:info (closed X) (:cond (type X container)))
(:cons_not (:task (putin X Y) (:cond (color X green) (sort Y cupboard) (type Y container))))
(:cons_not (:task (puton X Y) (:cond (sort X remotecontrol) (sort Y refrigerator))))
(:cons_not (:info (plate X) (:cond (color X red) (sort X remotecontrol))))
)
</instr>
<nl>
Go to the worktable
Put the book on the container
Open the cupboard
The black cup is at the worktable
The container is closed
Do not put the green in the cupboard
Do not put the remotecontrol on the refrigerator
The red remotecontrol is on the plate
</nl>
</test>
