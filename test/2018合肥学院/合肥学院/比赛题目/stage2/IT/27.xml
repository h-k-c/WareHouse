<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(plate 0) (at 0 3)
(sort 1 refrigerator) (size 1 big) (at 1 1) (type 1 container) (opened 1)
(sort 2 chair) (size 2 big) (at 2 2)
(sort 3 couch) (size 3 big) (at 3 3)
(sort 4 bed) (size 4 big) (at 4 4)
(sort 5 bed) (size 5 big) (at 5 5)
(sort 6 closet) (size 6 big) (at 6 6) (type 6 container) (opened 6)
(sort 7 couch) (size 7 big) (at 7 7)
(sort 8 refrigerator) (size 8 big) (at 8 8) (type 8 container) (closed 8)
(sort 9 book) (size 9 small)
(sort 10 bottle) (size 10 small) (color 10 blue) (hold 10)
(sort 11 can) (size 11 small) (color 11 white) (inside 11 6)
(sort 12 remotecontrol) (size 12 small) (inside 12 1)
(sort 13 remotecontrol) (size 13 small) (color 13 blue) (at 13 7)
(sort 14 can) (size 14 small) (color 14 red) (at 14 4)
(sort 15 remotecontrol) (size 15 small) (color 15 black) (at 15 7)
(sort 16 can) (size 16 small) (color 16 black) (at 16 3)
(sort 17 bottle) (size 17 small) (color 17 yellow)
</info>
<mis>
(at 17 4)
</mis>
<err>
<r>
(inside 9 6)
</r>
<w>
(inside 9 1)
</w>
</err>
</env>
<instr>(:ins 
(:task (puton X Y) (:cond (sort X book) (sort Y couch)))
(:task (putdown X) (:cond (sort X remotecontrol)))
(:task (close X) (:cond (sort X closet) (type X container)))
(:task (putdown X) (:cond (sort X can)))
(:task (putin X Y) (:cond (sort X can) (color X red) (sort Y closet)))
(:task (close X) (:cond (sort X refrigerator)))
(:info (opened X) (:cond (type X container)))
(:info (plate X) (:cond (color X black) (sort X can)))
(:info (at X Y) (:cond (sort X bottle) (color X blue) (sort Y bed)))
(:cons_not (:task (putin X Y) (:cond (color X black) (sort X can) (type Y container))))
)
</instr>
<nl>
Put a book on the couch.
Put down the remotecontrol.
Close the door of closet.
Put down the can.
Put a red can in the closet.
Close the refrigerator.
All the container is opened.
There is a black can on the plate.
There is blue bottle on the bed.
Do not put the black can in a container.
</nl>
</test>
