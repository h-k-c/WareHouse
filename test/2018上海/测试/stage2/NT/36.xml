<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(at 0 2)
(sort 1 human) (size 1 big) (at 1 1)
(sort 2 television) (size 2 big) (at 2 2)
(sort 3 refrigerator) (size 3 big) (at 3 3) (type 3 container) (closed 3)
(sort 4 can) (size 4 small) (color 4 white) (hold 4)
(sort 5 cup) (size 5 small) (at 5 1)
(sort 6 remotecontrol) (size 6 small) (color 6 red) (at 6 2)
(sort 7 can) (size 7 small) (color 7 white)
(sort 8 bottle) (size 8 small) (color 8 blue) (plate 8)
(sort 9 bottle) (size 9 small) (color 9 yellow) (inside 9 3)
(sort 10 bottle) (size 10 small) (color 10 green) (at 10 2)
(sort 11 remotecontrol) (size 11 small)
(sort 12 book) (size 12 small) (color 12 yellow) (inside 12 3)
(sort 13 book) (size 13 small) (color 13 black) (at 13 2)
(sort 14 book) (size 14 small) (color 14 green) (at 14 2)
(sort 15 cup) (size 15 small) (color 15 white) (at 15 1)
(sort 16 book) (size 16 small) (color 16 green) (at 16 1)
(sort 17 can) (size 17 small) (color 17 blue) (at 17 2)
(sort 18 cup) (size 18 small) (color 18 yellow) (at 18 1)
</info>
<mis>
(inside 11 3)
</mis>
<err>
<r>
(at 7 2)
</r>
<w>
(at 7 3)
</w>
</err>
</env>
<instr>(:ins 
(:task (goto X) (:cond (sort X human)))
(:task (putdown X) (:cond (sort X bottle)))
(:task (putdown X) (:cond (color X white) (sort X can)))
(:info (at X Y) (:cond (sort X book) (sort Y television)))
(:info (closed X) (:cond (type X container) (sort X refrigerator)))
(:cons_not (:info (plate X) (:cond (sort X cup) (color X yellow))))
)
</instr>
<nl>
Go to the human.
Put down the bottle which is blue.
Put down the can which is white.
There is a book on the television.
The door of the refrigerator is closed.
There must not has a cup which is yellow on the plate.

</nl>
</test>
