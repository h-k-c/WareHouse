<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(plate 0) (at 0 6)
(sort 1 airconditioner) (size 1 big) (at 1 1)
(sort 2 television) (size 2 big) (at 2 2)
(sort 3 plant) (size 3 big) (at 3 3)
(sort 4 human) (size 4 big) (at 4 4)
(sort 5 airconditioner) (size 5 big) (at 5 5)
(sort 6 sofa) (size 6 big) (at 6 6)
(sort 7 table) (size 7 big) (at 7 7)
(sort 8 cupboard) (size 8 big)(size 8 big) (at 8 8) (type 8 container) 
(sort 9 refrigerator) (size 9 big) (at 9 9) (type 9 container) 
(sort 10 cup) (size 10 small) (color 10 blue) (at 10 1)
(sort 11 book) (size 11 small)
(sort 12 remotecontrol) (size 12 small)
(sort 13 cup) (size 13 small) (color 13 red) (hold 13)
(sort 14 can) (size 14 small) (color 14 blue)
(sort 15 remotecontrol) (size 15 small) (color 15 black)
(sort 16 can) (size 16 small) (color 16 white)
(sort 17 bottle) (size 17 small) (color 17 blue)
(sort 18 can) (size 18 small) (at 18 5)
(sort 19 cup) (size 19 small) (color 19 blue)
(sort 20 can) (size 20 small) (color 20 green) (at 20 4)
</info>
<mis>
(at 16 6)
(at 17 4)
(at 19 1)
</mis>
<err>
<r>
(inside 11 9)
(inside 12 9)
(at 14 2)
(at 15 3)
</r>
<w>
(inside 11 8)
(inside 12 1)
(at 14 7)
(at 15 1)
</w>
</err>
</env>
<instr>(:ins 
(:task (pickup X) (:cond (color X black) (sort X remotecontrol)))
(:task (open X) (:cond (type X container)))
(:task (putin X Y) (:cond (sort X can) (sort Y refrigerator)))
(:task (puton X Y) (:cond (sort X bottle) (sort X blue) (sort Y plant)))
(:task (puton X Y) (:cond (sort X book) (sort Y sofa)))
(:info (opened X) (:cond (sort X refrigerator)))
(:cons_not (:info (plate X) (:cond (sort X remotecontrol))))
(:cons_notnot (:info (at X Y) (:cond (color X blue) (sort Y airconditioner))))
)
</instr>
<nl>
Pick up a black remotecontrol.
Open each container.
Put a can in the refrigerator.
Put a blue bottle on the plant.
Put a book on the sofa.
The refrigerator is opened.
The remotecontrol must not be on the plate.
</nl>
</test>
