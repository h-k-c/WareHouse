<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="off" ans="off">
<info>
(plate 0) (at 0 5)
(sort 1 couch) (size 1 big) (at 1 1)
(sort 2 chair) (size 2 big) (at 2 2)
(sort 3 refrigerator) (size 3 big) (at 3 3) (type 3 container) (opened 3)
(sort 4 plant) (size 4 big) (at 4 4)
(sort 5 desk) (size 5 big) (at 5 5)
(sort 6 desk) (size 6 big) (at 6 6)
(sort 7 sofa) (size 7 big) (at 7 7)
(sort 8 closet) (size 8 big) (at 8 8) (type 8 container) (opened 8)
(sort 9 cup) (size 9 small) (color 9 yellow)
(sort 10 can) (size 10 small) (at 10 1)
(sort 11 remotecontrol) (size 11 small) (at 11 5)
(sort 12 bottle) (size 12 small)
(sort 13 bottle) (size 13 small) (color 13 green) (at 13 2)
(sort 14 cup) (size 14 small) (at 14 6)
(sort 15 book) (size 15 small) (color 15 green) (at 15 6)
(sort 16 book) (size 16 small)
(sort 17 cup) (size 17 small) (color 17 yellow) (at 17 7)
(sort 18 cup) (size 18 small) (color 18 green) (hold 18)
(sort 19 can) (size 19 small) (color 19 yellow) (at 19 6)
(sort 20 book) (size 20 small) (color 20 green) (inside 20 8)
</info>
<mis>
(at 16 2)
</mis>
<err>
<r>
(at 9 4)
(at 12 7)
</r>
<w>
(at 9 2)
(at 12 6)
</w>
</err>
</env>
<instr>(:ins 
(:task (close X) (:cond (type X container) (sort X closet)))
(:task (goto X) (:cond (sort X desk)))
(:task (putdown X) (:cond (color X yellow) (sort X cup)))
(:info (closed X) (:cond (sort X refrigerator)))
(:info (plate X) (:cond (sort X can) (color X yellow)))
(:cons_notnot (:info (at X Y) (:cond (sort X book) (sort Y couch))))
(:cons_notnot (:info (plate X) (:cond (sort X can) (color X yellow))))
(:cons_not (:task (close X) (:cond (sort X closet))))
)
</instr>
<nl>
Please close the closet.
Then go to the desk.
Please put down the yellow cup.
The refrigerator is closed.
The yellow can is on the plate.
The book must be at the couch.
The yellow must be on the plate.
The closet is not closed.
</nl>
</test>
