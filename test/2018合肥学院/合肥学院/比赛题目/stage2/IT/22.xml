<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="on" ans="on">
<info>
(at 0 1)
(sort 1 workspace) (size 1 big) (at 1 1)
(sort 2 television) (size 2 big) (at 2 2)
(sort 3 sofa) (size 3 big) (at 3 3)
(sort 4 book) (size 4 small) (color 4 yellow) (at 4 1)
(sort 5 remotecontrol) (size 5 small) (color 5 red) (at 5 3)
(sort 6 cup) (size 6 small) (color 6 yellow)
(sort 7 book) (size 7 small) (at 7 2)
(sort 8 book) (size 8 small) (color 8 red)
(sort 9 cup) (size 9 small) (color 9 red)
(sort 10 bottle) (size 10 small) (plate 10)
(sort 11 book) (size 11 small) (color 11 white) (hold 11)
(sort 12 cup) (size 12 small) (color 6 blue)
(sort 13 closet) (size 13 big) (at 13 13) (type 13 container) (closed 13)
(sort 14 can) (size 14 small) (color 14 red) (at 14 3)
(sort 15 can) (size 15 small) (color 15 blue) (at 15 3)
(sort 16 can) (size 16 small) (color 16 yellow) (inside 16 3)
</info>
<mis>
(at 9 2)
(at 11 1)
</mis>
<err>
<r>
(at 8 1)
</r>
<w>
(at 8 3)
</w>
</err>
</env>
<instr>(:ins 
(:task (pickup X) (:cond (sort X book) (color X yellow)))
(:task (goto X) (:cond (sort X sofa)))
(:task (pickup X) (:cond (color X red)))
(:task (puton X Y) (:cond (sort X bottle) (sort Y workspace)))
(:task (puton X Y) (:cond (sort X book) (sort Y workspace)))
(:task (putin X Y) (:cond (sort X can) (sort Y closet)))
(:task (close X) (:cond (sort X closet)))
(:info (at X Y) (:cond (sort X cup) (sort Y television)))
(:info (at X Y) (:cond (sort X book) (sort Y television)))
(:info (at X Y) (:cond (color X white) (sort X book) (sort Y sofa)))
(:cons_notnot (:info (plate X) (:cond (sort X bottle))))
(:cons_notnot (:info (at X Y) (:cond (color X yellow) (sort X cup) (sort Y workspace))))
)
</instr>
<nl>
</nl>
</test>
