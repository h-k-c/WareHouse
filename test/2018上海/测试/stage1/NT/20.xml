<?xml version="1.0" encoding="utf-8"?>
<test>
<env mis="on" err="off" ans="off">
<info>
(plate 0) (at 0 4) (hold 11)
(sort 1 desk) (size 1 big) (at 1 1)
(sort 2 microwave) (size 2 big) (at 2 2) (type 2 container) 
(sort 3 cupboard) (size 3 big) (at 3 3) (type 3 container)
(sort 4 sofa) (size 4 big) (at 4 4)
(sort 5 closet) (size 5 big) (at 5 5) (type 5 container) 
(sort 6 refrigerator) (size 6 big) (at 6 6) (type 6 container)
(sort 7 book) (size 7 small) (color 7 green)
(sort 8 cup) (size 8 small) (color 8 white) (at 8 4)
(sort 9 book) (size 9 small) (color 9 white)
(sort 10 bottle) (size 10 small) (color 10 black)
(sort 11 book) (size 11 small) (color 11 green) 
(sort 12 remotecontrol) (size 12 small)
(sort 13 can) (size 13 small) (color 13 green)
(sort 14 bottle) (size 14 small) (color 14 black)
(sort 15 can) (size 15 small) (color 15 red) (at 15 4)
</info>
<mis>
(inside 7 3)
(at 10 1)
(inside 14 2)
</mis>
<err>
<r>
(at 9 1)
(inside 12 2)
(inside 13 2)
</r>
<w>
(at 9 6)
(inside 12 3)
(inside 13 5)
</w>
</err>
</env>
<instr>(:ins 
(:info (opened X) (:cond (sort X microwave)))
(:info (opened X) (:cond (sort X refrigerator)))
(:info (closed X) (:cond (sort X cupboard)))
(:info (opened X) (:cond (sort X closet)))
(:cons_not (:info (plate X) (:cond (sort X book) (color X white))))
(:task (puton X Y) (:cond (sort X book) (color X green) (sort Y sofa)))
(:task (pickup X) (:cond (sort X can) (color X red)))
(:task (putin X Y) (:cond (sort X can) (color X red) (sort Y refrigerator)))
)
</instr>
<nl>
The microwave is opened.
The refrigerator is opened.
The cupboard is closed.
The closet is opened.
Do not put the white book on the plate.
Put the green book on the sofa.
Pick up the red can.
Put the red can in the refrigerator.
</nl>
</test>
